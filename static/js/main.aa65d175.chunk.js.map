{"version":3,"sources":["helper.jsx","components/Square.jsx","components/Board.jsx","components/Game.jsx","App.js","reportWebVitals.js","index.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","console","log","style","background","border","fontSize","fontWeight","cursor","outline","Square","value","onClick","borderRadius","width","height","margin","display","gridTemplate","Board","map","square","styles","Game","useState","Array","fill","board","setBoard","xIsNext","setXisNext","winner","boardCopy","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAAO,SAASA,EAAgBC,GAW5B,IAVA,IAAMC,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACnC,kBAAkBD,EAAMC,GAAxB,GAAOE,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GAClE,OAAON,EAAQI,GAGvB,OAAO,KASXG,QAAQC,IAAIT,EANI,CACZ,KAAM,KAAM,KACZ,IAAK,IAAK,IACV,KAAM,KAAM,Q,WCrBVU,EAAQ,CACVC,WAAY,YACZC,OAAQ,qBACRC,SAAU,OACVC,WAAY,IACZC,OAAQ,UACRC,QAAS,QAOEC,EAJA,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,QAAV,OACb,wBAAQT,MAAOA,EAAOS,QAASA,EAA/B,SAAyCD,KCTrCR,EAAQ,CACZE,OAAQ,qBACRQ,aAAc,OACdC,MAAO,QACPC,OAAQ,QACRC,OAAQ,SACRC,QAAS,OACTC,aAAc,mCAWDC,EARD,SAAC,GAAD,IAAGzB,EAAH,EAAGA,QAASkB,EAAZ,EAAYA,QAAZ,OACZ,qBAAKT,MAAOA,EAAZ,SACGT,EAAQ0B,KAAI,SAACC,EAAQzB,GAAT,OACX,cAAC,EAAD,CAAgBe,MAAOU,EAAQT,QAAS,kBAAMA,EAAQhB,KAAzCA,SCZb0B,EAAS,CACbR,MAAO,QACPE,OAAQ,aAyCKO,EAtCF,WACX,MAA0BC,mBAASC,MAAM,GAAGC,KAAK,OAAjD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACMC,EAAStC,EAAgBkC,GAoB/B,OACE,qCACE,cAAC,EAAD,CAAOjC,QAASiC,EAAOf,QApBP,SAAChB,GACnB,IAAMoC,EAAS,YAAOL,GAElBI,GAAUC,EAAUpC,KAExBoC,EAAUpC,GAAKiC,EAAU,IAAM,IAC/BD,EAASI,GACTF,GAAYD,OAcV,sBAAK1B,MAAOmB,EAAZ,UACE,4BACGS,EACG,WAAaA,EACb,iBAAmBF,EAAU,IAAM,OAX3C,wBAAQjB,QAAS,kBAAMgB,EAASH,MAAM,GAAGC,KAAK,QAA9C,+BCjBSO,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.aa65d175.chunk.js","sourcesContent":["export function calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ]\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nconst squares = [\r\n    null, null, null,\r\n    'x', 'x', 'o',\r\n    null, null, null\r\n];\r\n\r\nconsole.log(calculateWinner(squares));","import React from \"react\";\r\n\r\nconst style = {\r\n    background: 'lightblue',\r\n    border: '2px solid darkblue',\r\n    fontSize: '30px',\r\n    fontWeight: 800,\r\n    cursor: 'pointer',\r\n    outline: 'none'\r\n};\r\n\r\nconst Square = ({ value, onClick }) => (\r\n  <button style={style} onClick={onClick}>{value}</button>\r\n);\r\n\r\nexport default Square;\r\n","import React from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nconst style = {\r\n  border: \"4px solid darkblue\",\r\n  borderRadius: \"10px\",\r\n  width: \"250px\",\r\n  height: \"250px\",\r\n  margin: \"0 auto\",\r\n  display: \"grid\",\r\n  gridTemplate: \"repeat(3, 1fr) / repeat(3, 1fr)\",\r\n};\r\n\r\nconst Board = ({ squares, onClick }) => (\r\n  <div style={style}>\r\n    {squares.map((square, i) => (\r\n      <Square key={i} value={square} onClick={() => onClick(i)} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default Board;\r\n","import React, { useState } from \"react\";\r\nimport { calculateWinner } from \"../helper\";\r\nimport Board from \"./Board\";\r\n\r\nconst styles = {\r\n  width: \"200px\",\r\n  margin: \"20px auto\",\r\n};\r\n\r\nconst Game = () => {\r\n  const [board, setBoard] = useState(Array(9).fill(null));\r\n  const [xIsNext, setXisNext] = useState(true);\r\n  const winner = calculateWinner(board);\r\n\r\n  const handleClick = (i) => {\r\n    const boardCopy = [...board];\r\n    //if user click an occupied square or if game is won, return\r\n    if (winner || boardCopy[i]) return;\r\n    //put an x or an o in the clicked square\r\n    boardCopy[i] = xIsNext ? \"x\" : \"o\";\r\n    setBoard(boardCopy);\r\n    setXisNext(!xIsNext);\r\n  };\r\n\r\n  //const jumpTo = () => {};\r\n\r\n  const renderMoves = () => {\r\n    return (\r\n      <button onClick={() => setBoard(Array(9).fill(null))}>Start Game</button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Board squares={board} onClick={handleClick} />\r\n      <div style={styles}>\r\n        <p>\r\n          {winner\r\n            ? \"winner: \" + winner\r\n            : \"Next Player: \" + (xIsNext ? \"x\" : \"o\")}\r\n        </p>\r\n        {renderMoves()}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import './App.css';\nimport Game from './components/Game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}